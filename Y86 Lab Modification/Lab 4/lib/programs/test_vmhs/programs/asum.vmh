//  Original Code
//  @000             			// 	.pos 0 
//  30f40001000000000000 		//10	 init:	irmovq Stack   , %rsp  	 # Set up stack pointer  
//  30f50001000000000000 		//20 			irmovq Stack   , %rbp  	 # Set up base pointer   
//  806000000000000000   		//29			call   Main		         # Execute main program
//  30f3cdab000000000000		//39      		irmovq 0xabcd  , %rbx
//  6130						//41			subq   %rbx    , %rax
//  c00e						//43			mtc0   $rax    , $14     # Terminate Program (by Cop)
//  00           				//44			halt			         # Terminate program (by ISA)
//                   			// # Array of 4 elements
//  @007             			// 	.align 4 (56)
//  0d00000000000000     		//64	 array:	.quad d
//  c000000000000000     		//72	 		.quad c0
//  000b000000000000     		//80	 		.quad b00
//  00a0000000000000     		//88	 		.quad a000	

//  @00c              			//address : 96 
//  a05f         				//98	 Main:	pushq  %rbp 
//  2045         				//100			rrmovq %rsp    , %rbp
//  30f00400000000000000 		//110			irmovq $4      , %rax	
//  a00f         				//112			pushq  %rax		         # Push 4
//  30f23800000000000000 		//122			irmovq array   , %rdx
//  a02f         				//124			pushq  %rdx      	     # Push array
//  80a000000000000000   		//133			call   Sum		         # Sum(array, 4)
//  2054         				//135			rrmovq %rbp    , %rsp
//  b05f         				//137			popq   %rbp
//  90           				//138			ret 

                   				//  	 $begin sum-ys 0 
//  @014             			//160 	                                 # int Sum(int *Start, int Count)
//  a05f         				//162	 Sum:	pushq  %rbp
//  2045         				//164			rrmovq %rsp    , %rbp
//  50151000000000000000 		//174			mrmovq 16(%rbp), %rcx 	 # rcx = Start
//  50251800000000000000 		//184			mrmovq 24(%rbp), %rdx	 # rdx = Count
//  6300         				//186			xorq   %rax    , %rax    # sum = 0
//  6222         				//188			andq   %rdx    , %rdx	 # Set condition codes
//  73f200000000000000   		//197			je     End
//  50610000000000000000 		//207	 Loop:	mrmovq (%rcx)  , %rsi	 # get *Start
//  6060         				//209			addq   %rsi    , %rax    # add to sum
//  30f30800000000000000 		//219			irmovq $8      , %rbx    
//  6031         				//221			addq   %rbx    , %rcx    # Start++
//  30f3ffffffffffffffff 		//231			irmovq $-1     , %rbx	  
//  6032         				//233			addq   %rbx    , %rdx    # Count--
//  74c500000000000000   		//242			jne    Loop              # Stop when 0
//  2054         				//244	 End:	rrmovq %rbp    , %rsp
//  b05f         				//246			popq   %rbp
//  90           				//247 			ret
//                   			//       $end sum-ys 0 
//                   			// 
//                   			// 	# The stack starts here and grows to lower addresses
//  							// 	.pos 100		
//  							//  Stack	 
//  							//  $end code-ysa 
//  							//  $end code-yso 

// Dumped Result

@000 
30f4000100000000
000030f500010000
0000000080600000
000000000030f3cd
ab00000000000061
30c00e0000000000
@007
0d00000000000000 
c000000000000000
000b000000000000
00a0000000000000
@00c
a05f204530f00400
000000000000a00f
30f2380000000000
0000a02f80a00000
00000000002054b0
5f90000000000000
@014
a05f204550151000
0000000000005025
1800000000000000
6300622273f20000
0000000000506100
0000000000000060
6030f30800000000
000000603130f3ff
ffffffffffffff60
3274c50000000000
00002054b05f9000