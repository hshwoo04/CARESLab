// asum.vmh for Lab 6
//
//  Original Code
//  @000             			// 	.pos 0 
//  30f4f401000000000000 		//10	 init:	irmovq 	Stack  , %rsp  		# Set up stack pointer  
//  30f5f401000000000000 		//20 			irmovq  Stack  , %rbp  		# Set up base pointer   
//  807800000000000000   		//29			call 	Main				# Execute main program
//  30f37878800700000000		//39      		irmovq  0xabcd , %rbx
//  6130						//41			subq 	%rbx   , %rax
//  c00e						//43			mtc0 	$rax   , $14   		# Terminate Program (by Cop)
//  00           				//44			halt						# Terminate program (by ISA)
//                   			// # Array of 4 elements
//  @007             			// 	.align 8	address : 56	
//  0d00000000000000     		//64	 array:	.quad 	d
//  c000000000000000     		//72	 		.quad 	c0
//  000b000000000000     		//80	 		.quad 	b00
//  00a0000000000000     		//88	 		.quad 	a000	
								//
//  @00f              			//address : 120 
//  a05f         				//122	 Main:	pushq 	%rbp 
//  2045         				//124			rrmovq	%rsp   , %rbp
//  30f02D00000000000000 		//134			irmovq	$45	   , %rax	
//  a00f         				//136			pushq 	%rax				# Push 45
//  30f20006000000000000 		//146			irmovq  array  , %rdx
//  a02f         				//148			pushq 	%rdx      			# Push array
//  80c800000000000000   		//157			call 	Sum					# Sum(array, 45)
//  2054         				//159			rrmovq	%rbp   , %rsp
//  b05f         				//161			popq 	%rbp
//  90           				//162			ret 
//                   			// 
                   				//  	$begin sum-ys 0 
//  @019             			//200 	# int Sum(int *Start, int Count)	address : 200
//  a05f         				//202	 Sum:	pushq  %rbp
//  2045         				//204			rrmovq %rsp	   , %rbp
//  50151000000000000000 		//214			mrmovq 16(%rbp), %rcx 		# ecx = Start
//  50251800000000000000 		//224			mrmovq 24(%rbp), %rdx		# edx = Count
//  6300         				//226			xorq   %rax    , %rax		# sum = 0
//  6222         				//228			andq   %rdx    , %rdx		# Set condition codes
//  731a01000000000000   		//237			je     End
//  50610000000000000000 		//247	 Loop:	mrmovq (%rcx)  , %rsi		# get *Start
//  6060         				//249			addq   %rsi    , %rax       # add to sum
//  30f30800000000000000 		//259			irmovq $8      , %rbx       # 
//  6031         				//261			addq   %rbx    , %rcx       # Start++
//  30f3ffffffffffffffff 		//271			irmovq $-1     , %rbx	    # 
//  6032         				//273			addq   %rbx    , %rdx       # Count--
//  74ed00000000000000   		//282			jne    Loop             	# Stop when 0
//  2054         				//284	 End:	rrmovq %rbp    , %rsp
//  b05f         				//286			popq   %rbp
//  90           				//287 			ret
//                  		 	//  $end sum-ys 0 
//                 			  	// 
//                 			  	// # The stack starts here and grows to lower addresses
//  							// 	.pos 500		
//  							// Stack	 
//  							//  $end code-ysa 
//  							//  $end code-yso 

@000
30f4f40100000000
000030f5f4010000
0000000080780000
000000000030f378
7880070000000061
30c00e0000000000

@007
0d00000000000000
c000000000000000
000b000000000000
00a0000000000000

@00f
a05f204530f02D00
000000000000a00f
30f2000600000000
0000a02f80c80000
00000000002054b0
5f90000000000000

@019
a05f204550151000
0000000000005025
1800000000000000
63006222731a0100
0000000000506100
0000000000000060
6030f30800000000
000000603130f3ff
ffffffffffffff60
3274ed0000000000
00002054b05f9000

@0C0
0100000000000000
0200000000000000
0300000000000000
0400000000000000
0500000000000000
0600000000000000
0700000000000000
0800000000000000
0900000000000000
0a00000000000000
0b00000000000000
0c00000000000000
0d00000000000000
0e00000000000000
0f00000000000000
0001000000000000
0002000000000000
0003000000000000
0004000000000000
0005000000000000
0006000000000000
0007000000000000
0008000000000000
0009000000000000
000a000000000000
000b000000000000
000c000000000000
000d000000000000
000e000000000000
000f000000000000
0000100000000000
0000200000000000
0000300000000000
0000400000000000
0000500000000000
0000600000000000
0000700000000000
0000800000000000
0000900000000000
0000a00000000000
0000b00000000000
0000c00000000000
0000d00000000000
0000e00000000000
0000f00000000000
